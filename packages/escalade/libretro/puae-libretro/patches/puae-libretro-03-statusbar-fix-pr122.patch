From 1c7dd73334a513b0db4e37d2890d85445550e552 Mon Sep 17 00:00:00 2001
From: Tony Jansson <tony@pihaus.org>
Date: Mon, 16 Sep 2019 01:03:41 +0300
Subject: [PATCH 1/3] Statusbar position fix

---
 libretro/libretro.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libretro/libretro.c b/libretro/libretro.c
index c2eafc3..a79c2a4 100644
--- a/libretro/libretro.c
+++ b/libretro/libretro.c
@@ -2039,7 +2039,6 @@ void retro_get_system_info(struct retro_system_info *info)
 bool retro_update_av_info(bool change_geometry, bool change_timing, bool isntsc)
 {
    request_update_av_info = false;
-   opt_statusbar_position = opt_statusbar_position_old;
    int retroh_old = retroh;
    float hz = currprefs.chipset_refreshrate;
    fprintf(stderr, "[libretro-uae]: Trying to update AV geometry:%d timing:%d, to: ntsc:%d hz:%2.2f, from video_config:%d, video_aspect:%d\n", change_geometry, change_timing, isntsc, hz, video_config, video_config_aspect);
@@ -2195,6 +2194,7 @@ bool retro_update_av_info(bool change_geometry, bool change_timing, bool isntsc)
       environ_cb(RETRO_ENVIRONMENT_SET_GEOMETRY, &new_av_info);
 
       /* ensure statusbar stays visible when it is at bottom */
+      opt_statusbar_position = opt_statusbar_position_old;
       if(retroh < retroh_old)
          if (opt_statusbar_position >= 0 && (retroh_old - retroh) > opt_statusbar_position)
             opt_statusbar_position = retroh_old - retroh;

From 13a83ad8ab281136c06c6e5c9303e36ec22174e7 Mon Sep 17 00:00:00 2001
From: Tony Jansson <tony@pihaus.org>
Date: Mon, 16 Sep 2019 01:26:36 +0300
Subject: [PATCH 2/3] Hotkey for zoomings

---
 libretro/libretro-mapper.c | 16 +++++++++++++++-
 libretro/libretro.c        | 17 ++++++++++++++++-
 2 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/libretro/libretro-mapper.c b/libretro/libretro-mapper.c
index f8938b1..18473d6 100644
--- a/libretro/libretro-mapper.c
+++ b/libretro/libretro-mapper.c
@@ -73,9 +73,10 @@ extern void retro_mouse_but0(int);
 extern void retro_mouse_but1(int);
 extern void retro_joy(unsigned int, unsigned long);
 extern unsigned int uae_devices[4];
-extern int mapper_keys[30];
+extern int mapper_keys[31];
 extern int video_config;
 extern int video_config_aspect;
+extern int zoom_mode_id;
 extern bool request_update_av_info;
 extern bool opt_enhanced_statusbar;
 extern int opt_statusbar_position;
@@ -93,6 +94,7 @@ enum EMU_FUNCTIONS {
    EMU_MOUSE_SPEED,
    EMU_RESET,
    EMU_ASPECT_RATIO_TOGGLE,
+   EMU_ZOOM_MODE_TOGGLE,
    EMU_FUNCTION_COUNT
 };
 
@@ -136,6 +138,11 @@ void emu_function(int function) {
             video_config_aspect=1;
          request_update_av_info=true;
          break;
+      case EMU_ZOOM_MODE_TOGGLE:
+         zoom_mode_id++;
+         if(zoom_mode_id>5)zoom_mode_id=0;
+         request_update_av_info=true;
+         break;
    }
 }
 
@@ -451,6 +458,9 @@ void update_input(int disable_physical_cursor_keys)
             case 29:
                emu_function(EMU_ASPECT_RATIO_TOGGLE);
                break;
+            case 30:
+               emu_function(EMU_ZOOM_MODE_TOGGLE);
+               break;
          }
       }
       /* Key up */
@@ -588,6 +598,8 @@ void update_input(int disable_physical_cursor_keys)
                     emu_function(EMU_RESET);
                 else if(mapper_keys[i] == mapper_keys[29]) /* Toggle aspect ratio */
                     emu_function(EMU_ASPECT_RATIO_TOGGLE);
+                else if(mapper_keys[i] == mapper_keys[30]) /* Toggle zoom mode */
+                    emu_function(EMU_ZOOM_MODE_TOGGLE);
                 else if(mapper_keys[i] == -2) /* Mouse left */
                     setmousebuttonstate (0, 0, 1);
                 else if(mapper_keys[i] == -3) /* Mouse right */
@@ -615,6 +627,8 @@ void update_input(int disable_physical_cursor_keys)
                     ; /* nop */
                 else if(mapper_keys[i] == mapper_keys[29])
                     ; /* nop */
+                else if(mapper_keys[i] == mapper_keys[30])
+                    ; /* nop */
                 else if(mapper_keys[i] == -2)
                     setmousebuttonstate (0, 0, 0);
                 else if(mapper_keys[i] == -3)
diff --git a/libretro/libretro.c b/libretro/libretro.c
index a79c2a4..b3fe6c4 100644
--- a/libretro/libretro.c
+++ b/libretro/libretro.c
@@ -87,7 +87,7 @@ extern void retro_poll_event(void);
 unsigned int uae_devices[4];
 extern int cd32_pad_enabled[NORMAL_JPORTS];
 
-int mapper_keys[30]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
+int mapper_keys[31]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 static char buf[64][4096] = { 0 };
 
 static retro_video_refresh_t video_cb;
@@ -695,6 +695,13 @@ void retro_set_environment(retro_environment_t cb)
          {{ NULL, NULL }},
          "---"
       },
+      {
+         "puae_mapper_zoom_mode_toggle",
+         "Hotkey: Toggle zoom mode",
+         "",
+         {{ NULL, NULL }},
+         "---"
+      },
       /* Button mappings */
       {
          "puae_mapper_select",
@@ -881,6 +888,7 @@ void retro_set_environment(retro_environment_t cb)
          || strstr(core_options[i].key, "puae_mapper_mouse_speed")
          || strstr(core_options[i].key, "puae_mapper_reset")
          || strstr(core_options[i].key, "puae_mapper_aspect_ratio_toggle")
+         || strstr(core_options[i].key, "puae_mapper_zoom_mode_toggle")
          )
             hotkey = 1;
          else
@@ -1627,6 +1635,13 @@ static void update_variables(void)
       mapper_keys[29] = keyId(var.value);
    }
 
+   var.key = "puae_mapper_zoom_mode_toggle";
+   var.value = NULL;
+   if (environ_cb(RETRO_ENVIRONMENT_GET_VARIABLE, &var) && var.value)
+   {
+      mapper_keys[30] = keyId(var.value);
+   }
+
 
 
 

From f81575f04571a3a499dd1634eb1596e40479f6f3 Mon Sep 17 00:00:00 2001
From: Tony Jansson <tony@pihaus.org>
Date: Mon, 16 Sep 2019 16:32:01 +0300
Subject: [PATCH 3/3] Statusbar + geometry fixes

---
 libretro/libretro-mapper.c |  5 ++++-
 libretro/libretro.c        | 31 +++++++++++++++++++------------
 retrodep/retroglue.c       | 29 +++++++++++++----------------
 3 files changed, 36 insertions(+), 29 deletions(-)

diff --git a/libretro/libretro-mapper.c b/libretro/libretro-mapper.c
index 18473d6..4f39e1b 100644
--- a/libretro/libretro-mapper.c
+++ b/libretro/libretro-mapper.c
@@ -55,7 +55,8 @@ int touch=-1; // gui mouse btn
 int fmousex,fmousey; // emu mouse
 int slowdown=0;
 extern int pix_bytes;
-extern int fake_ntsc;
+extern bool fake_ntsc;
+extern bool real_ntsc;
 
 int vkflag[7]={0,0,0,0,0,0,0};
 static int jbt[24]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
@@ -130,6 +131,8 @@ void emu_function(int function) {
          fake_ntsc=false;
          break;
       case EMU_ASPECT_RATIO_TOGGLE:
+         if(real_ntsc)
+            break;
          if(video_config_aspect==0)
             video_config_aspect=(video_config & 0x02) ? 1 : 2;
          else if(video_config_aspect==1)
diff --git a/libretro/libretro.c b/libretro/libretro.c
index b3fe6c4..8a31b9c 100644
--- a/libretro/libretro.c
+++ b/libretro/libretro.c
@@ -12,8 +12,8 @@
 #include "options.h"
 #include "inputdevice.h"
 
-#define EMULATOR_DEF_WIDTH 640
-#define EMULATOR_DEF_HEIGHT 400
+#define EMULATOR_DEF_WIDTH 720
+#define EMULATOR_DEF_HEIGHT 568
 #define EMULATOR_MAX_WIDTH 1024
 #define EMULATOR_MAX_HEIGHT 1024
 
@@ -43,6 +43,7 @@ extern unsigned int turbo_pulse;
 int pix_bytes = 2;
 static bool pix_bytes_initialized = false;
 bool fake_ntsc = false;
+bool real_ntsc = false;
 bool request_update_av_info = false;
 int zoom_mode_id = 0;
 int zoomed_height;
@@ -691,7 +692,7 @@ void retro_set_environment(retro_environment_t cb)
       {
          "puae_mapper_aspect_ratio_toggle",
          "Hotkey: Toggle aspect ratio",
-         "",
+         "Only usable with PAL video",
          {{ NULL, NULL }},
          "---"
       },
@@ -1017,6 +1018,7 @@ static void update_variables(void)
          {
             video_config |= PUAE_VIDEO_NTSC;
             strcat(uae_config, "ntsc=true\n");
+            real_ntsc = true;
          }
    }
 
@@ -2054,7 +2056,6 @@ void retro_get_system_info(struct retro_system_info *info)
 bool retro_update_av_info(bool change_geometry, bool change_timing, bool isntsc)
 {
    request_update_av_info = false;
-   int retroh_old = retroh;
    float hz = currprefs.chipset_refreshrate;
    fprintf(stderr, "[libretro-uae]: Trying to update AV geometry:%d timing:%d, to: ntsc:%d hz:%2.2f, from video_config:%d, video_aspect:%d\n", change_geometry, change_timing, isntsc, hz, video_config, video_config_aspect);
 
@@ -2163,15 +2164,18 @@ bool retro_update_av_info(bool change_geometry, bool change_timing, bool isntsc)
          break;
    }
 
-   /* Special height for Dyna Blaster */
-   if(fake_ntsc)
+   /* Special cropped height for Dyna Blaster (uncropped will leave some statusbar trails, but who cares since they will be cleaned up by itself */
+   if(fake_ntsc && video_config & PUAE_VIDEO_CROP)
    {
       retroh = ((video_config & PUAE_VIDEO_HIRES) ? 460 : 230);
    }
 
-   /* Need to change defaults too to get forced aspect at start */
-   defaultw = retrow;
-   defaulth = retroh;
+   /* When the actual dimensions change and not just the view */
+   if(change_timing || fake_ntsc)
+   {
+      defaultw = retrow;
+      defaulth = retroh;
+   }
 
    static struct retro_system_av_info new_av_info;
    new_av_info.geometry.base_width = retrow;
@@ -2210,9 +2214,12 @@ bool retro_update_av_info(bool change_geometry, bool change_timing, bool isntsc)
 
       /* ensure statusbar stays visible when it is at bottom */
       opt_statusbar_position = opt_statusbar_position_old;
-      if(retroh < retroh_old)
-         if (opt_statusbar_position >= 0 && (retroh_old - retroh) > opt_statusbar_position)
-            opt_statusbar_position = retroh_old - retroh;
+      if(!change_timing)
+         if(retroh < defaulth)
+            if (opt_statusbar_position >= 0 && (defaulth - retroh) > opt_statusbar_position)
+               opt_statusbar_position = defaulth - retroh;
+
+      //printf("statusbar:%d old:%d, retroh:%d defaulth:%d\n", opt_statusbar_position, opt_statusbar_position_old, retroh, defaulth);
    }
 
    /* apply zoom mode if necessary */
diff --git a/retrodep/retroglue.c b/retrodep/retroglue.c
index 7729533..df4a422 100644
--- a/retrodep/retroglue.c
+++ b/retrodep/retroglue.c
@@ -34,8 +34,8 @@ extern int pix_bytes;
 #define LOG_MSG(...) 
 #define LOG_MSG2(...) 
 
-extern int retrow; 
-extern int retroh;
+extern int defaultw;
+extern int defaulth;
 
 unsigned short int clut[] = {
 	0x0000,  /* full background transparency */
@@ -270,8 +270,6 @@ void retro_key_up(int key)
 	inputdevice_do_keyboard (key, 0);
 }
 
-int RLOOP=1;
-
 int retro_renderSound(short* samples, int sampleCount)
 {
    int i; 
@@ -320,13 +318,13 @@ int graphics_init(void) {
 	if (pixbuf != NULL) {
 		return 1;
 	}
-	currprefs.gfx_size_win.width=retrow;
+	currprefs.gfx_size_win.width = defaultw;
 
 #ifdef ENABLE_LOG_SCREEN
 	currprefs.gfx_height = 256;
 	currprefs.gfx_linedbl = 0;	//disable line doubling
 #else
-	currprefs.gfx_size_win.height= retroh;
+	currprefs.gfx_size_win.height = defaulth;
 #endif	
 	opt_scrw = currprefs.gfx_size_win.width;
 	opt_scrh = currprefs.gfx_size_win.height;
@@ -345,9 +343,6 @@ int graphics_init(void) {
 #else
 	pixbuf = (unsigned short int*) &bmp[0];
 #endif
-	/* Always have the maximum PAL area available in case NTSC aspect is changed to PAL */
-	currprefs.gfx_size_win.height = (retroh <= 284) ? 284 : 568;
-	
 	//printf("graphics init: pixbuf=%p color_mode=%d width=%d height=%d\n", pixbuf, currprefs.color_mode, currprefs.gfx_size_win.width, currprefs.gfx_size_win.height);
 	if (pixbuf == NULL) {
 		printf("Error: not enough memory to initialize screen buffer!\n");
@@ -439,8 +434,8 @@ int check_prefs_changed_gfx (void) {
     else
         return 0;
 
-    changed_prefs.gfx_size_win.width = retrow;
-    changed_prefs.gfx_size_win.height = retroh;
+    changed_prefs.gfx_size_win.width = defaultw;
+    changed_prefs.gfx_size_win.height = defaulth;
 
     currprefs.gfx_size_win.width    = changed_prefs.gfx_size_win.width;
     currprefs.gfx_size_win.height   = changed_prefs.gfx_size_win.height;
@@ -456,12 +451,14 @@ int check_prefs_changed_gfx (void) {
 }
 
 void clean_led_area(void) {
-	int size = 11 * opt_scrw * gfxvidinfo.pixbytes;
-	unsigned short int* addr;
+/*
+    int size = 11 * opt_scrw * gfxvidinfo.pixbytes;
+    unsigned short int* addr;
 
-	addr = pixbuf;
-	addr+= (opt_scrh-11-TD_POSY)* opt_scrw;
-	memset(addr, 0, size);
+    addr = pixbuf;
+    addr+= (opt_scrh-11-TD_POSY)* opt_scrw;
+    memset(addr, 0, size);
+*/
 }
 
 
